// <auto-generated />
using System;
using MobCentra.Infrastructure.EfContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MobCentra.Infrastructure.Migrations
{
    [DbContext(typeof(StudioContext))]
    [Migration("20250516211011_InitRequestSeddddf")]
    partial class InitRequestSeddddf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MobCentra.Domain.Entities.AppUserAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("AddressLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AptNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MapLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GovernorateId");

                    b.ToTable("AppUserAddress", (string)null);
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.AppUserStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int>("AddPlacesAllowed")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditProfileAllowed")
                        .HasColumnType("int");

                    b.Property<int>("LoginAllowed")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RateAllowed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppUserStatus", (string)null);
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.AppUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppUserStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<Guid?>("GovernorateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsEmailVerified")
                        .HasColumnType("int");

                    b.Property<int>("IsMobileNoVerified")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoOfSmsSent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PushNotificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserStatusId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GovernorateId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Faq", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("AnswerAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionOt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faq");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Governorate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Inquiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppUserStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<Guid?>("GovernorateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoOfSmsSent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserStatusId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GovernorateId");

                    b.ToTable("Inquiry");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.MainService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActiveForAppDisplay")
                        .HasColumnType("int");

                    b.Property<int>("ActiveForUserAdd")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MainServices");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.MainSlider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("CallActionTextAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallActionTextOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("DistenationLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistenationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MainSliders");

                    b.HasDiscriminator().HasValue("MainSlider");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.MainSubServiceMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MainServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SubServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MainServiceId");

                    b.HasIndex("SubServiceId");

                    b.ToTable("MainSubServiceMappings");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrivilegeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.RequestStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteAllowed")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestStatus");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.RolePrivilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePrivilege");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.ServiceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentFileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsPaid")
                        .HasColumnType("int");

                    b.Property<Guid?>("MainServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PartsAreAvailable")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestBriefly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("RequestDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("RequestStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("RequestTime")
                        .HasColumnType("time");

                    b.Property<decimal?>("ServiceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.HasIndex("MainServiceId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("SubServiceId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.ServiceRequestResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RequestStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ResponseDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("ResponseTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ServiceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("ServiceRequestResponses");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnableEditor")
                        .HasColumnType("int");

                    b.Property<int>("IsMedia")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SendToMobileApp")
                        .HasColumnType("int");

                    b.Property<string>("SettingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingValueOt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.SubService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActiveForAppDisplay")
                        .HasColumnType("int");

                    b.Property<int>("ActiveForUserAdd")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultBannerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("SubServiceIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubServices");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.TechnicianService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MainServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MainServiceId");

                    b.HasIndex("ProviderId");

                    b.ToTable("TechnicianServices");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Tutorial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tutorials");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Version", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsRequired")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionLinkIOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionNameIOS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.SubServiceSlider", b =>
                {
                    b.HasBaseType("MobCentra.Domain.Entities.MainSlider");

                    b.Property<Guid>("SubServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("SubServiceId");

                    b.HasDiscriminator().HasValue("SubServiceSlider");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.AppUserAddress", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.AppUsers", "AppUser")
                        .WithMany("AppUserAddresses")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobCentra.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MobCentra.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("MobCentra.Domain.Entities.Governorate", "Governorate")
                        .WithMany()
                        .HasForeignKey("GovernorateId");

                    b.Navigation("AppUser");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.AppUsers", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.AppUserStatus", "AppUserStatus")
                        .WithMany()
                        .HasForeignKey("AppUserStatusId");

                    b.HasOne("MobCentra.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MobCentra.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("MobCentra.Domain.Entities.Governorate", "Governorate")
                        .WithMany()
                        .HasForeignKey("GovernorateId");

                    b.Navigation("AppUserStatus");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.City", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.Governorate", "Governorate")
                        .WithMany("Cities")
                        .HasForeignKey("GovernorateId");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Governorate", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.Country", "Country")
                        .WithMany("Governorates")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Inquiry", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.AppUserStatus", "AppUserStatus")
                        .WithMany()
                        .HasForeignKey("AppUserStatusId");

                    b.HasOne("MobCentra.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MobCentra.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("MobCentra.Domain.Entities.Governorate", "Governorate")
                        .WithMany()
                        .HasForeignKey("GovernorateId");

                    b.Navigation("AppUserStatus");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.MainSubServiceMapping", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.MainService", "MainService")
                        .WithMany("MainSubServiceMappings")
                        .HasForeignKey("MainServiceId");

                    b.HasOne("MobCentra.Domain.Entities.SubService", "SubService")
                        .WithMany("MainSubServiceMappings")
                        .HasForeignKey("SubServiceId");

                    b.Navigation("MainService");

                    b.Navigation("SubService");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Privilege", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.Privilege", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.RolePrivilege", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobCentra.Domain.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.ServiceRequest", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.AppUserAddress", "AppUserAddress")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("MobCentra.Domain.Entities.AppUsers", "Client")
                        .WithMany("ClientServiceRequests")
                        .HasForeignKey("ClientId");

                    b.HasOne("MobCentra.Domain.Entities.MainService", "MainService")
                        .WithMany()
                        .HasForeignKey("MainServiceId");

                    b.HasOne("MobCentra.Domain.Entities.AppUsers", "Provider")
                        .WithMany("ProviderServiceRequests")
                        .HasForeignKey("ProviderId");

                    b.HasOne("MobCentra.Domain.Entities.RequestStatus", "RequestStatus")
                        .WithMany()
                        .HasForeignKey("RequestStatusId");

                    b.HasOne("MobCentra.Domain.Entities.SubService", null)
                        .WithMany("ServiceRequests")
                        .HasForeignKey("SubServiceId");

                    b.Navigation("AppUserAddress");

                    b.Navigation("Client");

                    b.Navigation("MainService");

                    b.Navigation("Provider");

                    b.Navigation("RequestStatus");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.ServiceRequestResponse", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.AppUsers", "Client")
                        .WithMany("ClientServiceRequestResponses")
                        .HasForeignKey("ClientId");

                    b.HasOne("MobCentra.Domain.Entities.AppUsers", "Provider")
                        .WithMany("ProviderServiceRequestResponses")
                        .HasForeignKey("ProviderId");

                    b.HasOne("MobCentra.Domain.Entities.RequestStatus", "RequestStatus")
                        .WithMany()
                        .HasForeignKey("RequestStatusId");

                    b.HasOne("MobCentra.Domain.Entities.ServiceRequest", "ServiceRequest")
                        .WithMany("ServiceRequestResponses")
                        .HasForeignKey("ServiceRequestId");

                    b.Navigation("Client");

                    b.Navigation("Provider");

                    b.Navigation("RequestStatus");

                    b.Navigation("ServiceRequest");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.TechnicianService", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.MainService", "MainService")
                        .WithMany()
                        .HasForeignKey("MainServiceId");

                    b.HasOne("MobCentra.Domain.Entities.AppUsers", "Provider")
                        .WithMany("TechnicianServices")
                        .HasForeignKey("ProviderId");

                    b.Navigation("MainService");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobCentra.Domain.Entities.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.SubServiceSlider", b =>
                {
                    b.HasOne("MobCentra.Domain.Entities.SubService", "SubService")
                        .WithMany()
                        .HasForeignKey("SubServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubService");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.AppUsers", b =>
                {
                    b.Navigation("AppUserAddresses");

                    b.Navigation("ClientServiceRequestResponses");

                    b.Navigation("ClientServiceRequests");

                    b.Navigation("ProviderServiceRequestResponses");

                    b.Navigation("ProviderServiceRequests");

                    b.Navigation("TechnicianServices");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Country", b =>
                {
                    b.Navigation("Governorates");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Governorate", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.MainService", b =>
                {
                    b.Navigation("MainSubServiceMappings");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Role", b =>
                {
                    b.Navigation("RolePrivileges");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.ServiceRequest", b =>
                {
                    b.Navigation("ServiceRequestResponses");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.SubService", b =>
                {
                    b.Navigation("MainSubServiceMappings");

                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("MobCentra.Domain.Entities.Users", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
